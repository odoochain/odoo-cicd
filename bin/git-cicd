#!/bin/bash
export LC_MESSAGES=C
export LANG=C
export LC_ALL=C
GIT_TIMEOUT="${GIT_TIMEOUT:-600}"
PID="$$"

function wait_others {
python3 - <<EOF
import psutil
import time
states = set()

while True:
	for proc in psutil.process_iter():
		if proc.name() == 'git-cicd':
			if proc.pid < $PID and proc.status() != 'sleeping':
				time.sleep(0.1)
				break
	else:
		break
EOF
}
wait_others

function retry {
	deadline=$(date --date " + ${GIT_TIMEOUT} seconds" +"%Y%m%d%H%M%S")

    while [ "$(date +"%Y%m%d%H%M%S")" -lt "${deadline}" ]; do
		wait_others

		inodes=$(ls -ial | grep '\s\.$' | awk '{print $1}')
		if [[ -z "$inodes" ]]; then
			if [[ -z "${INITIAL_PWD}" ]]; then
				echo "RETRY:::directory was removed while being inside and env variable INITIAL_PWD is not set"
			else
				while [ 2 == 2 ]; do
					if [[ -d "${INITIAL_PWD}/.git" ]]; then
						cd "${INITIAL_PWD}"
						break
					fi
					sleep 0.5;
				done
			fi
        elif test -f .git/index.lock; then
            sleep 0.5;
		elif [[ ! -z "${INITIAL_PWD}" && ! -d "${INITIAL_PWD}" ]]; then
            sleep 0.5;
        else
            "$@";
            return;
        fi
    done
}

retry git "$@"
returncode=$?
sync

exit $returncode
